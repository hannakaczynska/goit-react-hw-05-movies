{"version":3,"file":"static/js/884.0474add3.chunk.js","mappings":"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","sources":["pages/MovieDetails.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams, useLocation, Link, Outlet } from 'react-router-dom';\n\nconst MovieDetails = () => {\n  const [image, setImage] = useState();\n  const [isLoading, setIsLoading] = useState(true);\n  const [title, setTitle] = useState('');\n  const [year, setYear] = useState('');\n  const [score, setScore] = useState('');\n  const [overview, setOverview] = useState('');\n  const [genres, setGenres] = useState([]);\n\n  const params = useParams('');\n  const movieId = params.movieId;\n\n  const location = useLocation();\n  const backPath = location.state?.from ?? '/';\n\n  const manageMovieDetails = movie => {\n    const year = new Date(movie.release_date).getFullYear();\n    const score = Math.floor(movie.vote_average * 10);\n    const genresNames = movie.genres.map(genre => genre.name);\n    const imagePath = movie.poster_path || movie.backdrop_path;\n    setTitle(movie.title);\n    setYear(year);\n    setScore(score);\n    setOverview(movie.overview);\n    setGenres(genresNames);\n    setIsLoading(true);\n    setImage(imagePath);\n  };\n\n  useEffect(() => {\n    const API_KEY = '0003f54f58f173442abd026bac610d83';\n    const movieDetailsURL = `https://api.themoviedb.org/3/movie/${movieId}?language=en-US&api_key=${API_KEY}`;\n    const fetchMovieDetails = async () => {\n      try {\n        const response = await fetch(movieDetailsURL);\n        const movieDetails = await response.json();\n        manageMovieDetails(movieDetails);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovieDetails();\n  }, [movieId]);\n\n  if (isLoading) {\n    return <p>Loading...</p>;\n  }\n\n  return (\n    <>\n      <Link to={backPath}>Go back</Link>\n      <div>\n        {image !== null ? (\n          <img\n            src={`https://image.tmdb.org/t/p/original${image}`}\n            alt={title}\n            width={300}\n          />\n        ) : (\n          <p></p>\n        )}\n        <div>\n          {isNaN(year) ? (\n            <h2>{title}</h2>\n          ) : (\n            <h2>\n              {title} ({year})\n            </h2>\n          )}\n          <p>User score: {score}%</p>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          <p>{genres.join(', ')}</p>\n        </div>\n      </div>\n      <div>\n        <h5>Additional information</h5>\n        <ul>\n          <li>\n            <Link to={`cast`} state={{ from: backPath }}>\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link to={`reviews`} state={{ from: backPath }}>\n              Reviews\n            </Link>\n          </li>\n        </ul>\n      </div>\n      <Outlet />\n    </>\n  );\n};\n\nexport default MovieDetails;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["useState","image","setImage","isLoading","setIsLoading","title","setTitle","year","setYear","score","setScore","overview","setOverview","genres","setGenres","movieId","useParams","backPath","useLocation","state","from","manageMovieDetails","movie","Date","release_date","getFullYear","Math","floor","vote_average","genresNames","map","genre","name","imagePath","poster_path","backdrop_path","useEffect","movieDetailsURL","fetchMovieDetails","fetch","response","json","movieDetails","console","log","to","src","alt","width","isNaN","join","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}