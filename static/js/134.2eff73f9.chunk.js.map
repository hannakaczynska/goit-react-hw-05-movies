{"version":3,"file":"static/js/134.2eff73f9.chunk.js","mappings":"2KAiBA,IAdmB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OACdC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,8BACGF,EAAOG,KAAI,SAAAC,GAAK,OACf,yBACC,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAACC,KAAMP,GAA/C,SAA2DG,EAAMK,SADzDL,EAAME,GADA,KAOtB,C,wGCsCD,UAhDe,WACb,OAA0CI,EAAAA,EAAAA,UAAS,IAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOV,EAAP,KAAea,EAAf,KACA,GAAwCC,EAAAA,EAAAA,IAAgB,IAAxD,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAYF,EAAaG,IAAI,SAiCnC,OApBAC,EAAAA,EAAAA,YAAU,WACR,IACMC,EAAc,0DAAsDH,EAAtD,8DADJ,oCAGhB,GAAkB,KAAdA,GAAkC,OAAdA,EAAxB,CAEA,IAAMI,EAAU,mCAAG,+GAEQC,MAAMF,GAFd,cAETG,EAFS,gBAGMA,EAASC,OAHf,QAGTxB,EAHS,QAIJyB,SAAW,IACpBZ,EAAUb,EAAO0B,SALJ,kDAQfC,QAAQC,IAAI,SAAZ,MARe,0DAAH,qDAWhBP,GAbkD,CAcnD,GAAE,CAACJ,KAGF,iCACE,kBAAMY,SA7BW,SAAAC,GACnBA,EAAEC,iBACoB,KAAlBpB,GACFK,EAAgB,CAAEgB,MAAOrB,GAE5B,EAwBG,WACE,kBAAOsB,KAAK,OAAOC,MAAOvB,EAAewB,SAlC1B,SAAAL,GACnBlB,EAAiBkB,EAAEM,OAAOF,MAC3B,KAiCK,mBAAQD,KAAK,SAAb,wBAEF,wBAAgB,KAAXjC,GAAgB,SAAC,IAAD,CAAYA,OAAQA,IAAa,OAG3D,C,sBCnDD,SAASqC,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBV,EAAQW,EAAKX,KAInB,CAHE,MAAOY,GAEP,YADAN,EAAOM,EAET,CAEID,EAAKE,KACPR,EAAQL,GAERc,QAAQT,QAAQL,GAAOe,KAAKR,EAAOC,EAEvC,CAEe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GAEzB,SAASb,EAAMP,GACbG,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQR,EAClE,CAEA,SAASQ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CAEAhB,OAAMiB,EACR,GACF,CACF,C","sources":["components/MoviesList.jsx","pages/Movies.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import React from 'react';\nimport { Link, useLocation } from 'react-router-dom'\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <>\n      {movies.map(movie => (\n        <li key={movie.id}>\n         <Link to={`/movies/${movie.id}`} state={{from: location}}>{movie.title}</Link>\n        </li>\n      ))}\n    </>\n  );\n};\n\nexport default MoviesList;\n","import React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport MoviesList from 'components/MoviesList';\n\nconst Movies = () => {\n  const [searchedMovie, setSearchedMovie] = useState('');\n  const [movies, setMovies] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams('');\n  const movieName = searchParams.get('query');\n\n  const handleChange = e => {\n    setSearchedMovie(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (searchedMovie !== '') {\n      setSearchParams({ query: searchedMovie });\n    }\n  };\n\n  useEffect(() => {\n    const API_KEY = '0003f54f58f173442abd026bac610d83';\n    const searchMovieURL = `https://api.themoviedb.org/3/search/movie?query=${movieName}&include_adult=false&language=en-US&page=1&api_key=${API_KEY}`;\n\n    if (movieName === '' || movieName === null) return;\n\n    const fetchMovie = async () => {\n      try {\n        const response = await fetch(searchMovieURL);\n        const movies = await response.json();\n        if (movies.result !== []) {\n          setMovies(movies.results);\n        }\n      } catch (error) {\n        console.log('error:', error);\n      }\n    };\n    fetchMovie();\n  }, [movieName]);\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" value={searchedMovie} onChange={handleChange} />\n        <button type=\"submit\">Search</button>\n      </form>\n      <ul>{movies !== '' ? <MoviesList movies={movies} /> : ''}</ul>\n    </>\n  );\n};\n\nexport default Movies;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["movies","location","useLocation","map","movie","to","id","state","from","title","useState","searchedMovie","setSearchedMovie","setMovies","useSearchParams","searchParams","setSearchParams","movieName","get","useEffect","searchMovieURL","fetchMovie","fetch","response","json","result","results","console","log","onSubmit","e","preventDefault","query","type","value","onChange","target","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}