{"version":3,"file":"static/js/597.1dd49829.chunk.js","mappings":"gNAqDA,UAlDa,WACX,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAGMC,GADSC,EAAAA,EAAAA,MACQD,QAmBvB,OAjBAE,EAAAA,EAAAA,YAAU,WACR,IACMC,EAAY,6CAAyCH,EAAzC,2CADF,oCAEVI,EAAc,mCAAG,iHAEIC,MAAMF,GAFV,cAEbG,EAFa,gBAGKA,EAASC,OAHd,OAGbC,EAHa,OAIbC,EAAWD,EAAUV,KAAKY,MAAM,EAAG,IACzCX,EAAQU,GALW,kDAOnBE,QAAQC,IAAR,MAPmB,0DAAH,qDAWpBR,GACD,GAAE,CAACJ,KAGF,8BACmB,IAAhBF,EAAKe,QACJ,mEAEA,wBACGf,EAAKgB,KAAI,SAACC,EAAGC,GAAJ,OACR,0BACsB,OAAnBD,EAAEE,cACD,gBACEC,IAAG,6CAAwCH,EAAEE,cAC7CE,IAAKJ,EAAEK,KACPC,MAAO,OAGT,kBAEF,uBAAIN,EAAEK,QACN,uCAAeL,EAAEO,eAXVN,EADD,OAmBnB,C,sBCnDD,SAASO,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CAEIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,EAEvC,CAEe,SAASS,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMc,EAAGK,MAAMJ,EAAME,GAEzB,SAASd,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOgB,GACdrB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASgB,EACnE,CAEAjB,OAAMkB,EACR,GACF,CACF,C","sources":["components/Cast.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n\n  const params = useParams();\n  const movieId = params.movieId;\n\n  useEffect(() => {\n    const API_KEY = '0003f54f58f173442abd026bac610d83';\n    const movieCastURL = `https://api.themoviedb.org/3/movie/${movieId}/credits?language=en-US&api_key=${API_KEY}`;\n    const fetchMovieCast = async () => {\n      try {\n        const response = await fetch(movieCastURL);\n        const movieCast = await response.json();\n        const mainCast = movieCast.cast.slice(0, 15);\n        setCast(mainCast);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchMovieCast();\n  }, [movieId]);\n\n  return (\n    <>\n      {cast.length === 0 ? (\n        <p>We don't have any cast for this movie.</p>\n      ) : (\n        <ul>\n          {cast.map((c, index) => (\n            <li key={index}>\n              {c.profile_path !== null ? (\n                <img\n                  src={`https://image.tmdb.org/t/p/original${c.profile_path}`}\n                  alt={c.name}\n                  width={150}\n                />\n              ) : (\n                <p></p>\n              )}\n              <p>{c.name}</p>\n              <p>Charakter: {c.character}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["useState","cast","setCast","movieId","useParams","useEffect","movieCastURL","fetchMovieCast","fetch","response","json","movieCast","mainCast","slice","console","log","length","map","c","index","profile_path","src","alt","name","width","character","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}